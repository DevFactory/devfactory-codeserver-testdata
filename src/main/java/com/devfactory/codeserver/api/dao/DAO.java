package com.devfactory.codeserver.api.dao;

import java.io.Serializable;
import java.util.List;

/**
 * Interface for DAOs.
 *
 * @author Wander Costa (wander.costa@aurea.com)
 * @version 1.0
 * @param <E>
 */
public interface DAO<E> {

    /**
     * Return all entities.
     *
     * @return all entities.
     */
    List<E> findAll();

    /**
     * Return a single entity, or null if not found.
     *
     * @param id The ID of the entity
     * @return a single entity, or null if not found.
     */
    E find(Serializable id);

    /**
     * Save a single entity.
     *
     * @param e The entity to be saved.
     * @return The ID generated by the underlying storage system.
     * @throws java.lang.Exception If an error occurs.
     */
    Serializable save(E e) throws Exception;

    /**
     * Updates an entity replacing it.
     *
     * @param id The ID of the entity to be replaced.
     * @param e The new entity to replace the old one.
     * @throws java.lang.Exception If an error occurs.
     */
    void update(Serializable id, E e) throws Exception;

    /**
     * Delete all entities.
     *
     * @throws java.lang.Exception If an error occurs.
     */
    void deleteAll() throws Exception;

    /**
     * Delete a single entity, if existent.
     *
     * @param id The ID of the entity to be deleted.
     * @throws java.lang.Exception If an error occurs.
     */
    void delete(Serializable id) throws Exception;

}
